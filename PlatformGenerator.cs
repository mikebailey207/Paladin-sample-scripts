using System.Collections;
using System.Collections.Generic;
using UnityEngine;
 
public class PlatformGenerator : MonoBehaviour /* Attached to the platform itself that is 
    generated by the PlatformSpawner class. This class can be attached to any platform 
    in order to make it remove certain amounts of 'slices', and then make some of the remaining
    slices 'death' slices, all based on difficulty values that are incremented (or decremented) within 
    the PlatformSpawner class on level up within the BallController class. */
{
    [SerializeField]
    private List<GameObject> slices; // load in the slices in the inspector
    private int sliceChooser;
    private int removedSliceAmount;
       
    void Awake()
    {
        GeneratePlatform();
    }

    void GeneratePlatform()
    {     
        // remove certain amount of slices based on difficulty/stage of the game    
        removedSliceAmount = Random.Range(PlatformSpawner.psSingleton.difficultyModifierPlatforms, slices.Count);
      
        for (int i = 0; i < removedSliceAmount; i++)
        {           
            sliceChooser = Random.Range(0, slices.Count);
            slices[sliceChooser].SetActive(false);
            slices.Remove(slices[sliceChooser]);
            //make a random amount of the remaining slices into death slices
           
            int deathSliceAmount = 
                Random.Range(Mathf.RoundToInt(PlatformSpawner.psSingleton.difficultyModifierDeathSlices), slices.Count);    
            for (int j = 0; j < deathSliceAmount; j++)
            {      
                slices[deathSliceAmount].GetComponent<Renderer>().material.color = Color.blue;//death colour
            }
        }     
    }
}
